#######################################################################
#
# Docker Compose With a Complete Development Environment
# @Author : Wilman Ortiz
# @Copyright (c) developer.io
# @CreateAt : 11-02-2024
#
#######################################################################
version: "3.9"

networks:
  ntw_development:
    external: true

volumes:
  portainer-data:
    driver: local
    driver_opts:
      o: bind
      type: none
      device: $PORTAINER_DATA

services:
  traefik:
    image: traefik:latest
    container_name: server_traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
      - 8080:8080 
    networks:
      - ntw_development
    environment:
      - TZ=$TZ      
    volumes:
      - /vagrant/shared/config/traefik/tls.yaml:/etc/traefik/dynamic.yaml:ro
      - /vagrant/shared/config/traefik/traefik.yaml:/etc/traefik/traefik.yaml:ro
      - /vagrant/shared/certs:/etc/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro    
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server_traefik=true"
      - "traefik.http.routers.server_traefik.tls=true"
      - "traefik.http.services.server_traefik.loadbalancer.server.port=8080"
  whoami:
    image: containous/whoami
    container_name: server_whoami
    security_opt:
      - no-new-privileges:true
    networks:
      - ntw_development
    environment:
      - TZ=$TZ
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ntw_development"
      - "traefik.http.routers.whoami.rule=Host(`whoami.developer.local`)"
      - "traefik.http.routers.whoami.tls=true"
  portainer:    
    image: portainer/portainer-ce:latest
    container_name: server_portainer
    restart: always
    security_opt:
      - no-new-privileges:true
    networks:
      - ntw_development
    environment:
      - TZ=$TZ
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data 
    command: --admin-password "$$2y$$05$$nzBD8N0UnpSdAAbngQ4oAed3movf3R4wDO947B68IhHPtZ71YDkQ6" -H unix:///var/run/docker.sock # Portainer2024..
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=ntw_development"
      - "traefik.http.routers.portainer.rule=Host(`portainer.developer.local`)"
      - "traefik.http.routers.portainer.tls=true"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
#   mysql-kc:
#     image: mysql:8.0.27
#     ports:
#       - 3366:3306
#     restart: unless-stopped
#     environment:
#       # The user, password and database that Keycloak
#       # is going to create and use
#       MYSQL_USER: keycloak_user
#       MYSQL_PASSWORD: keycloak_password
#       MYSQL_DATABASE: keycloak_db
#       # Self-Explanatory
#       MYSQL_ROOT_PASSWORD: root_password
#     healthcheck:
#       test:
#         - CMD
#         - mysql
#         - -e
#         - select 1
#       interval: 10s
#       start_period: 20s
#       timeout: 5s
#     volumes:
#       - keycloak-and-mysql-volume:/var/lib/mysql
#     networks:
#       - keycloak-and-mysql-network

#   keycloak-w:
#     image: quay.io/keycloak/keycloak:latest
#     command: start-dev
#     ports:
#       - 8080:8080
#       - 8443:8443
#     restart: unless-stopped
#     environment:
#       # User and password for the Administration Console
#       KC_HTTP_RELATIVE_PATH: /keycloak
#       KEYCLOAK_USER: admin_user
#       KEYCLOAK_PASSWORD: admin_password
#       DB_VENDOR: mysql
#       DB_ADDR: mysql-kc
#       DB_PORT: 3306
#       # Same values as the mysql-kc service
#       DB_USER: keycloak_user
#       DB_PASSWORD: keycloak_password
#       DB_DATABASE: keycloak_db
#     depends_on:
#       - mysql-kc
#     networks:
#       - keycloak-and-mysql-network
#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     security_opt:
#       - no-new-privileges:true
#     restart: unless-stopped
#     networks:
#       - default
#     ports:
#       - "3000:3000"
#     user: $PUID
#     volumes:
#       - $DOCKERDIR/appdata/grafana:/var/lib/grafana
#     environment:
#       GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-simple-json-datasource,grafana-worldmap-panel,grafana-piechart-panel"

